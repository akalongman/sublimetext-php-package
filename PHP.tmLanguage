<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>TODO:
• Try to improve parameters list syntax – scope numbers, ‘=’, ‘,’ and possibly be intelligent about entity ordering
• Is meta.function-call the correct scope? I've added it to my theme but by default it's not highlighted</string>
	<key>fileTypes</key>
	<array>
		<!-- .php files are actually opened with HTML.tmLanguage, this is just a bit of trickery to make it look like PHP.tmLanguage is used to open them -->
		<string>php</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!.*(?&lt;!-)php[0-9]{0,1}\b</string>
	<key>foldingStartMarker</key>
	<string>(/\*|\{\s*$|&lt;&lt;&lt;HTML)</string>
	<key>foldingStopMarker</key>
	<string>(\*/|^\s*\}|^HTML;)</string>
	<key>name</key>
	<string>PHP</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.embedded.leading.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>source.php.embedded.line.empty.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.begin.php</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>meta.consecutive-tags.php</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>source.php</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.end.php</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>source.php</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.embedded.trailing.php</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Matches empty tags.</string>
			<key>match</key>
			<string>(?x)
				(^\s*)?							# 1 - Leading whitespace
					(							# 2 - meta.embedded.line.empty.php
						(						# 3 - Open Tag
							(?:
								((?&lt;=\?&gt;)&lt;)		# 4 - Consecutive tags
							  | &lt;
							)
							\?(?i:php|=)?
						)
							(\s*)				# 5 - Loneliness
						((\?)&gt;)					# 6 - Close Tag
												# 7 - Scope ? as scope.php
					)
				(
					\1							# Match nothing if there was no
												#   leading whitespace...
				  | (\s*$\n)?					# or match trailing whitespace.
				)
			</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(?=&lt;\?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.embedded.leading.php</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Catches tags with preceeding whitespace.</string>
			<key>end</key>
			<string>(?&lt;=\?&gt;)(\s*$\n)?</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.embedded.trailing.php</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>&lt;\?(?i:php|=)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\?)&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.end.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>source.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>source.php.embedded.block.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(((?&lt;=\?&gt;)&lt;)|&lt;)\?(?i:php|=)?</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.begin.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.consecutive-tags.php</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Catches the remainder.</string>
			<key>end</key>
			<string>(\?)&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.end.php</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>source.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>source.php.embedded.line.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#language</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(TRUE|FALSE|NULL|__(FILE|FUNCTION|CLASS|METHOD|LINE|TRAIT|NAMESPACE|DIR)__|ON|OFF|YES|NO|NL|BR|TAB|INF|NAN)\b</string>
					<key>name</key>
					<string>constant.language.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(DEFAULT_INCLUDE_PATH|E_(ALL|COMPILE_(ERROR|WARNING)|CORE_(ERROR|WARNING)|(RECOVERABLE_)?ERROR|NOTICE|PARSE|STRICT|USER_(ERROR|NOTICE|WARNING|DEPRECATED)|WARNING|DEPRECATED)|PEAR_(EXTENSION_DIR|INSTALL_DIR)|PHP_(ZTS|DEBUG|SAPI|PREFIX|MANDIR|BINDIR|NORMAL_READ|BINARY_READ|CONFIG_(FILE_PATH|FILE_SCAN_DIR)|SESSION_(DISABLED|NONE|ACTIVE)|URL_(SCHEME|HOST|PORT|USER|PASS|PATH|QUERY|FRAGMENT)|ROUND_(HALF_UP|HALF_DOWN|HALF_EVEN|HALF_ODD)|QUERY_(RFC1738|RFC3986)|DATADIR|SHLIB_SUFFIX|MAXPATHLEN|INT_MAX|INT_SIZE|BINARY|E(OL|XTENSION_DIR)|L(IBDIR|OCALSTATEDIR)|O(S|UTPUT_HANDLER_(CONT|END|START|WRITE|FLUSH|CLEAN|FINAL|CLEANABLE|FLUSHABLE|REMOVABLE|STDFLAGS|STARTED|DISABLED))|SYSCONFDIR|MAJOR_VERSION|MINOR_VERSION|RELEASE_VERSION|EXTRA_VERSION|VERSION|VERSION_ID)|FILE_(APPEND|USE_INCLUDE_PATH|IGNORE_NEW_LINES|SKIP_EMPTY_LINES|NO_DEFAULT_CONTEXT|TEXT|BINARY)|UPLOAD_ERR_(OK|INI_SIZE|FORM_SIZE|PARTIAL|NO_FILE|NO_TMP_DIR|CANT_WRITE|EXTENSION)|DATE_(ATOM|COOKIE|ISO8601|RFC822|RFC850|RFC1036|RFC1123|RFC2822|RFC3339|RSS|W3C)|LIBXML_(VERSION|DOTTED_VERSION|LOADED_VERSION|NOENT|DTDLOAD|DTDATTR|DTDVALID|NOERROR|NOWARNING|NOBLANKS|XINCLUDE|NSCLEAN|NOCDATA|NONET|PEDANTIC|COMPACT|NOXMLDECL|PARSEHUGE|NOEMPTYTAG|ERR_NONE|ERR_WARNING|ERR_ERROR|ERR_FATAL)|OPENSSL_(VERSION_TEXT|VERSION_NUMBER|ALGO_SHA1|ALGO_MD5|ALGO_MD4|ALGO_DSS1|ALGO_SHA224|ALGO_SHA256|ALGO_SHA384|ALGO_SHA512|ALGO_RMD160|PKCS1_PADDING|SSLV23_PADDING|NO_PADDING|PKCS1_OAEP_PADDING|CIPHER_RC2_40|CIPHER_RC2_128|CIPHER_RC2_64|CIPHER_DES|CIPHER_3DES|CIPHER_AES_128_CBC|CIPHER_AES_192_CBC|CIPHER_AES_256_CBC|KEYTYPE_RSA|KEYTYPE_DSA|KEYTYPE_DH|KEYTYPE_EC|RAW_DATA|ZERO_PADDING|TLSEXT_SERVER_NAME)|X509_(PURPOSE_(SSL_CLIENT|SSL_SERVER|NS_SSL_SERVER|SMIME_SIGN|SMIME_ENCRYPT|CRL_SIGN|ANY))|PKCS7_(DETACHED|TEXT|NOINTERN|NOVERIFY|NOCHAIN|NOCERTS|NOATTR|BINARY|NOSIGS)|PREG_(PATTERN_ORDER|SET_ORDER|OFFSET_CAPTURE|SPLIT_NO_EMPTY|SPLIT_DELIM_CAPTURE|SPLIT_OFFSET_CAPTURE|GREP_INVERT|NO_ERROR|INTERNAL_ERROR|BACKTRACK_LIMIT_ERROR|RECURSION_LIMIT_ERROR|BAD_UTF8_ERROR|BAD_UTF8_OFFSET_ERROR|VERSION)|PCRE_VERSION|FORCE_(GZIP|DEFLATE)|ZLIB_(ENCODING_RAW|ENCODING_GZIP|ENCODING_DEFLATE)|SUNFUNCS_RET_(TIMESTAMP|STRING|DOUBLE)|HASH_HMAC|CAL_(GREGORIAN|JULIAN|JEWISH|FRENCH|NUM_CALS|DOW_DAYNO|DOW_SHORT|DOW_LONG|MONTH_GREGORIAN_SHORT|MONTH_GREGORIAN_LONG|MONTH_JULIAN_SHORT|MONTH_JULIAN_LONG|MONTH_JEWISH|MONTH_FRENCH|EASTER_DEFAULT|EASTER_ROMAN|EASTER_ALWAYS_GREGORIAN|EASTER_ALWAYS_JULIAN|JEWISH_ADD_ALAFIM_GERESH|JEWISH_ADD_ALAFIM|JEWISH_ADD_GERESHAYIM)|MHASH_(CRC32|MD5|SHA1|HAVAL256|RIPEMD160|TIGER|GOST|CRC32B|HAVAL224|HAVAL192|HAVAL160|HAVAL128|TIGER128|TIGER160|MD4|SHA256|ADLER32|SHA224|SHA512|SHA384|WHIRLPOOL|RIPEMD128|RIPEMD256|RIPEMD320|SNEFRU256|MD2|FNV132|FNV1A32|FNV164|FNV1A64|JOAAT)|INPUT_(POST|GET|COOKIE|ENV|SERVER|SESSION|REQUEST)|FILTER_(FLAG_NONE|REQUIRE_SCALAR|REQUIRE_ARRAY|FORCE_ARRAY|NULL_ON_FAILURE|VALIDATE_(INT|BOOLEAN|FLOAT|REGEXP|URL|EMAIL|IP)|DEFAULT|UNSAFE_RAW|SANITIZE_(STRING|STRIPPED|ENCODED|SPECIAL_CHARS|FULL_SPECIAL_CHARS|EMAIL|URL|NUMBER_INT|NUMBER_FLOAT|MAGIC_QUOTES)|CALLBACK|FLAG_(ALLOW_OCTAL|ALLOW_HEX|STRIP_LOW|STRIP_HIGH|STRIP_BACKTICK|ENCODE_LOW|ENCODE_HIGH|ENCODE_AMP|NO_ENCODE_QUOTES|EMPTY_STRING_NULL|ALLOW_FRACTION|ALLOW_THOUSAND|ALLOW_SCIENTIFIC|SCHEME_REQUIRED|HOST_REQUIRED|PATH_REQUIRED|QUERY_REQUIRED|IPV4|IPV6|NO_RES_RANGE|NO_PRIV_RANGE))|FTP_(ASCII|TEXT|BINARY|IMAGE|AUTORESUME|TIMEOUT_SEC|AUTOSEEK|FAILED|FINISHED|MOREDATA)|ICONV_(IMPL|VERSION|MIME_DECODE_STRICT|MIME_DECODE_CONTINUE_ON_ERROR)|ZEND_(THREAD_SAFE|DEBUG_BUILD|MULTIBYTE)|DEBUG_(BACKTRACE_PROVIDE_OBJECT|BACKTRACE_IGNORE_ARGS)|GMP_(ROUND_ZERO|ROUND_PLUSINF|ROUND_MINUSINF|VERSION)|T_(REQUIRE_ONCE|REQUIRE|EVAL|INCLUDE_ONCE|INCLUDE|LOGICAL_OR|LOGICAL_XOR|LOGICAL_AND|PRINT|SR_EQUAL|SL_EQUAL|XOR_EQUAL|OR_EQUAL|AND_EQUAL|MOD_EQUAL|CONCAT_EQUAL|DIV_EQUAL|MUL_EQUAL|MINUS_EQUAL|PLUS_EQUAL|BOOLEAN_OR|BOOLEAN_AND|IS_NOT_IDENTICAL|IS_IDENTICAL|IS_NOT_EQUAL|IS_EQUAL|IS_GREATER_OR_EQUAL|IS_SMALLER_OR_EQUAL|SR|SL|INSTANCEOF|UNSET_CAST|BOOL_CAST|OBJECT_CAST|ARRAY_CAST|STRING_CAST|DOUBLE_CAST|INT_CAST|DEC|INC|CLONE|NEW|EXIT|IF|ELSEIF|ELSE|ENDIF|LNUMBER|DNUMBER|STRING|STRING_VARNAME|VARIABLE|NUM_STRING|INLINE_HTML|CHARACTER|BAD_CHARACTER|ENCAPSED_AND_WHITESPACE|CONSTANT_ENCAPSED_STRING|ECHO|DO|WHILE|ENDWHILE|FOR|ENDFOR|FOREACH|ENDFOREACH|DECLARE|ENDDECLARE|AS|SWITCH|ENDSWITCH|CASE|DEFAULT|BREAK|CONTINUE|GOTO|FUNCTION|CONST|RETURN|TRY|CATCH|THROW|USE|INSTEADOF|GLOBAL|PUBLIC|PROTECTED|PRIVATE|FINAL|ABSTRACT|STATIC|VAR|UNSET|ISSET|EMPTY|HALT_COMPILER|CLASS|TRAIT|INTERFACE|EXTENDS|IMPLEMENTS|OBJECT_OPERATOR|DOUBLE_ARROW|LIST|ARRAY|CALLABLE|CLASS_C|TRAIT_C|METHOD_C|FUNC_C|LINE|FILE|COMMENT|DOC_COMMENT|OPEN_TAG|OPEN_TAG_WITH_ECHO|CLOSE_TAG|WHITESPACE|START_HEREDOC|END_HEREDOC|DOLLAR_OPEN_CURLY_BRACES|CURLY_OPEN|PAAMAYIM_NEKUDOTAYIM|NAMESPACE|NS_C|DIR|NS_SEPARATOR|DOUBLE_COLON)|NIL)\b</string>
					<key>name</key>
					<string>support.constant.core.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(A(B(DAY_([1-7])|MON_([0-9]{1,2}))|LT_DIGITS|M_STR|SSERT_(ACTIVE|BAIL|CALLBACK|QUIET_EVAL|WARNING))|C(ASE_(LOWER|UPPER)|HAR_MAX|O(DESET|NNECTION_(ABORTED|NORMAL|TIMEOUT)|UNT_(NORMAL|RECURSIVE))|REDITS_(ALL|DOCS|FULLPAGE|GENERAL|GROUP|MODULES|QA|SAPI)|RNCYSTR|RYPT_(BLOWFISH|EXT_DES|MD5|SALT_LENGTH|STD_DES|SHA256|SHA512)|URRENCY_SYMBOL)|D(AY_([1-7])|ECIMAL_POINT|IRECTORY_SEPARATOR|_(FMT|T_FMT))|E(NT_(COMPAT|NOQUOTES|QUOTES|IGNORE|SUBSTITUTE|DISALLOWED|HTML401|XML1|XHTML|HTML5)|RA(|_D_FMT|_D_T_FMT|_T_FMT|_YEAR)|XTR_(IF_EXISTS|OVERWRITE|REFS|PREFIX_(ALL|IF_EXISTS|INVALID|SAME)|SKIP))|FRAC_DIGITS|GROUPING|HTML_(ENTITIES|SPECIALCHARS)|IN(FO_(ALL|CONFIGURATION|CREDITS|ENVIRONMENT|GENERAL|LICENSE|MODULES|VARIABLES)|I_(ALL|PERDIR|SYSTEM|USER|SCANNER_(NORMAL|RAW))|T_(CURR_SYMBOL|FRAC_DIGITS))|L(C_(ALL|COLLATE|CTYPE|MESSAGES|MONETARY|NUMERIC|TIME)|O(CK_(EX|NB|SH|UN)|G_(ALERT|AUTH(|PRIV)|CONS|CRIT|CRON|DAEMON|DEBUG|EMERG|ERR|INFO|KERN|LOCAL([0-7])|LPR|MAIL|NDELAY|NEWS|NOTICE|NOWAIT|ODELAY|PERROR|PID|SYSLOG|USER|UUCP|WARNING)))|M(ON_([0-9]{1,2}|DECIMAL_POINT|GROUPING|THOUSANDS_SEP)|YSQL_(ASSOC|BOTH|NUM|CLIENT_(COMPRESS|SSL|INTERACTIVE|IGNORE_SPACE))|YSQLI_(READ_(DEFAULT_GROUP|DEFAULT_FILE)|OPT_(CONNECT_TIMEOUT|LOCAL_INFILE|SSL_VERIFY_SERVER_CERT)|INIT_COMMAND|CLIENT_(SSL|COMPRESS|INTERACTIVE|IGNORE_SPACE|NO_SCHEMA|FOUND_ROWS)|STORE_RESULT|USE_RESULT|ASSOC|NUM|BOTH|STMT_ATTR_(UPDATE_MAX_LENGTH|CURSOR_TYPE|PREFETCH_ROWS)|CURSOR_TYPE_(NO_CURSOR|READ_ONLY|FOR_UPDATE|SCROLLABLE)|(NOT_NULL|PRI_KEY|UNIQUE_KEY|MULTIPLE_KEY|BLOB|UNSIGNED|ZEROFILL|AUTO_INCREMENT|TIMESTAMP|SET|NUM|PART_KEY|GROUP|ENUM|BINARY|NO_DEFAULT_VALUE)_FLAG|TYPE_(DECIMAL|TINY|SHORT|LONG|FLOAT|DOUBLE|NULL|TIMESTAMP|LONGLONG|INT24|DATE|TIME|DATETIME|YEAR|NEWDATE|ENUM|SET|TINY_BLOB|MEDIUM_BLOB|LONG_BLOB|BLOB|VAR_STRING|STRING|CHAR|INTERVAL|GEOMETRY|NEWDECIMAL|BIT)|SET_(CHARSET_NAME|CHARSET_DIR)|NO_DATA|DATA_TRUNCATED|REPORT_(INDEX|ERROR|STRICT|ALL|OFF)|DEBUG_TRACE_ENABLED|SERVER_(QUERY_NO_GOOD_INDEX_USED|QUERY_NO_INDEX_USED|QUERY_WAS_SLOW|PS_OUT_PARAMS)|REFRESH_(GRANT|LOG|TABLES|HOSTS|STATUS|THREADS|SLAVE|MASTER))|_(1_PI|2_(PI|SQRTPI)|E|L(N10|N2|OG(10E|2E))|PI(|_2|_4)|SQRT1_2|SQRT2|SQRT3|SQRTPI|LNPI|EULER))|N(EGATIVE_SIGN|O(EXPR|STR)|_(CS_PRECEDES|SEP_BY_SPACE|SIGN_POSN))|P(ATH(INFO_(BASENAME|DIRNAME|EXTENSION|FILENAME)|_SEPARATOR)|M_STR|OSITIVE_SIGN|_(CS_PRECEDES|SEP_BY_SPACE|SIGN_POSN))|RADIXCHAR|S(EEK_(CUR|END|SET)|ORT_(ASC|DESC|NUMERIC|REGULAR|STRING|LOCALE_STRING|NATURAL|FLAG_CASE)|TR_PAD_(BOTH|LEFT|RIGHT))|T(HOUS(ANDS_SEP|EP)|_(FMT(|_AMPM)))|YES(EXPR|STR)|SOAP_(1_1|1_2|PERSISTENCE_SESSION|PERSISTENCE_REQUEST|FUNCTIONS_ALL|ENCODED|LITERAL|RPC|DOCUMENT|ACTOR_NEXT|ACTOR_NONE|ACTOR_UNLIMATERECEIVER|COMPRESSION_ACCEPT|COMPRESSION_GZIP|COMPRESSION_DEFLATE|AUTHENTICATION_BASIC|AUTHENTICATION_DIGEST|ENC_OBJECT|ENC_ARRAY|SINGLE_ELEMENT_ARRAYS|WAIT_ONE_WAY_CALLS|USE_XSI_ARRAY_TYPE)|WSDL_(CACHE_(NONE|DISK|MEMORY|BOTH))|SQLITE3_(ASSOC|NUM|BOTH|INTEGER|FLOAT|TEXT|BLOB|NULL|OPEN_(READONLY|READWRITE|CREATE))|STREAM_(NOTIFY_(CONNECT|AUTH_REQUIRED|AUTH_RESULT|MIME_TYPE_IS|FILE_SIZE_IS|REDIRECTED|PROGRESS|FAILURE|COMPLETED|RESOLVE|SEVERITY_INFO|SEVERITY_WARN|SEVERITY_ERR)|FILTER_(READ|WRITE|ALL)|CLIENT_(PERSISTENT|ASYNC_CONNECT|CONNECT)|CRYPTO_METHOD_(SSLv2_CLIENT|SSLv3_CLIENT|SSLv23_CLIENT|TLS_CLIENT|SSLv2_SERVER|SSLv3_SERVER|SSLv23_SERVER|TLS_SERVER)|SHUT_(RD|WR|RDWR)|PF_(INET|INET6|UNIX)|IPPROTO_(IP|TCP|UDP|ICMP|RAW)|SOCK_(STREAM|DGRAM|RAW|SEQPACKET|RDM)|PEEK|OOB|SERVER_(BIND|LISTEN)|USE_PATH|IGNORE_URL|REPORT_ERRORS|MUST_SEEK|URL_STAT_LINK|URL_STAT_QUIET|MKDIR_RECURSIVE|IS_URL|OPTION_(BLOCKING|READ_TIMEOUT|READ_BUFFER|WRITE_BUFFER)|BUFFER_(NONE|LINE|FULL)|CAST_AS_STREAM|CAST_FOR_SELECT|META_(TOUCH|OWNER|OWNER_NAME|GROUP|GROUP_NAME|ACCESS)|ENFORCE_SAFE_MODE)|SOCKET_(EPERM|ENOENT|EINTR|EIO|ENXIO|E2BIG|EBADF|EAGAIN|ENOMEM|EACCES|EFAULT|ENOTBLK|EBUSY|EEXIST|EXDEV|ENODEV|ENOTDIR|EISDIR|EINVAL|ENFILE|EMFILE|ENOTTY|ENOSPC|ESPIPE|EROFS|EMLINK|EPIPE|ENAMETOOLONG|ENOLCK|ENOSYS|ENOTEMPTY|ELOOP|EWOULDBLOCK|ENOMSG|EIDRM|ECHRNG|EL2NSYNC|EL3HLT|EL3RST|ELNRNG|EUNATCH|ENOCSI|EL2HLT|EBADE|EBADR|EXFULL|ENOANO|EBADRQC|EBADSLT|ENOSTR|ENODATA|ETIME|ENOSR|ENONET|EREMOTE|ENOLINK|EADV|ESRMNT|ECOMM|EPROTO|EMULTIHOP|EBADMSG|ENOTUNIQ|EBADFD|EREMCHG|ERESTART|ESTRPIPE|EUSERS|ENOTSOCK|EDESTADDRREQ|EMSGSIZE|EPROTOTYPE|ENOPROTOOPT|EPROTONOSUPPORT|ESOCKTNOSUPPORT|EOPNOTSUPP|EPFNOSUPPORT|EAFNOSUPPORT|EADDRINUSE|EADDRNOTAVAIL|ENETDOWN|ENETUNREACH|ENETRESET|ECONNABORTED|ECONNRESET|ENOBUFS|EISCONN|ENOTCONN|ESHUTDOWN|ETOOMANYREFS|ETIMEDOUT|ECONNREFUSED|EHOSTDOWN|EHOSTUNREACH|EALREADY|EINPROGRESS|EISNAM|EREMOTEIO|EDQUOT|ENOMEDIUM|EMEDIUMTYPE)|SCANDIR_(SORT_(ASCENDING|DESCENDING|NONE))|GLOB_(BRACE|MARK|NOSORT|NOCHECK|NOESCAPE|ERR|ONLYDIR|AVAILABLE_FLAGS)|XML_(ELEMENT_NODE|ATTRIBUTE_NODE|TEXT_NODE|CDATA_SECTION_NODE|ENTITY_REF_NODE|ENTITY_NODE|PI_NODE|COMMENT_NODE|DOCUMENT_(NODE|TYPE_NODE|FRAG_NODE)|NOTATION_NODE|HTML_DOCUMENT_NODE|DTD_NODE|ELEMENT_DECL_NODE|ATTRIBUTE_DECL_NODE|ENTITY_DECL_NODE|NAMESPACE_DECL_NODE|LOCAL_NAMESPACE|ATTRIBUTE_(CDATA|ID|IDREF|IDREFS|ENTITY|NMTOKEN|NMTOKENS|ENUMERATION|NOTATION)|ERROR_(NONE|NO_MEMORY|SYNTAX|NO_ELEMENTS|INVALID_TOKEN|UNCLOSED_TOKEN|PARTIAL_CHAR|TAG_MISMATCH|DUPLICATE_ATTRIBUTE|JUNK_AFTER_DOC_ELEMENT|PARAM_ENTITY_REF|UNDEFINED_ENTITY|RECURSIVE_ENTITY_REF|ASYNC_ENTITY|BAD_CHAR_REF|BINARY_ENTITY_REF|ATTRIBUTE_EXTERNAL_ENTITY_REF|MISPLACED_XML_PI|UNKNOWN_ENCODING|INCORRECT_ENCODING|UNCLOSED_CDATA_SECTION|EXTERNAL_ENTITY_HANDLING)|OPTION_(CASE_FOLDING|TARGET_ENCODING|SKIP_TAGSTART|SKIP_WHITE)|SAX_IMPL)|CURL(OPT_(IPRESOLVE|DNS_USE_GLOBAL_CACHE|DNS_CACHE_TIMEOUT|PORT|FILE|READDATA|INFILE|INFILESIZE|URL|PROXY|VERBOSE|HEADER|HTTPHEADER|NOPROGRESS|PROGRESSFUNCTION|NOBODY|FAILONERROR|UPLOAD|POST|FTPLISTONLY|FTPAPPEND|NETRC|FOLLOWLOCATION|PUT|USERPWD|PROXYUSERPWD|RANGE|TIMEOUT|TIMEOUT_MS|POSTFIELDS|REFERER|USERAGENT|FTPPORT|FTP_USE_EPSV|LOW_SPEED_LIMIT|LOW_SPEED_TIME|RESUME_FROM|COOKIE|COOKIESESSION|AUTOREFERER|SSLCERT|SSLCERTPASSWD|WRITEHEADER|SSL_VERIFYHOST|COOKIEFILE|SSLVERSION|TIMECONDITION|TIMEVALUE|CUSTOMREQUEST|STDERR|TRANSFERTEXT|RETURNTRANSFER|QUOTE|POSTQUOTE|INTERFACE|KRB4LEVEL|HTTPPROXYTUNNEL|FILETIME|WRITEFUNCTION|READFUNCTION|HEADERFUNCTION|MAXREDIRS|MAXCONNECTS|CLOSEPOLICY|FRESH_CONNECT|FORBID_REUSE|RANDOM_FILE|EGDSOCKET|CONNECTTIMEOUT|CONNECTTIMEOUT_MS|SSL_VERIFYPEER|CAINFO|CAPATH|COOKIEJAR|SSL_CIPHER_LIST|BINARYTRANSFER|NOSIGNAL|PROXYTYPE|BUFFERSIZE|HTTPGET|HTTP_VERSION|SSLKEY|SSLKEYTYPE|SSLKEYPASSWD|SSLENGINE|SSLENGINE_DEFAULT|SSLCERTTYPE|CRLF|ENCODING|PROXYPORT|UNRESTRICTED_AUTH|FTP_USE_EPRT|TCP_NODELAY|HTTP200ALIASES|MAX_RECV_SPEED_LARGE|MAX_SEND_SPEED_LARGE|HTTPAUTH|PROXYAUTH|FTP_CREATE_MISSING_DIRS|PRIVATE|FTP_SSL|CERTINFO|POSTREDIR|SSH_AUTH_TYPES|KEYPASSWD|SSH_PUBLIC_KEYFILE|SSH_PRIVATE_KEYFILE|SSH_HOST_PUBLIC_KEY_MD5|REDIR_PROTOCOLS|PROTOCOLS|FTP_FILEMETHOD|FTP_SKIP_PASV_IP|FTPSSLAUTH)|_(IPRESOLVE_(WHATEVER|V4|V6)|TIMECOND_(IFMODSINCE|IFUNMODSINCE|LASTMOD)|VERSION_(IPV6|KERBEROS4|SSL|LIBZ)|NETRC_(OPTIONAL|IGNORED|REQUIRED)|HTTP_VERSION_(NONE|1_0|1_1))|AUTH_(BASIC|DIGEST|GSSNEGOTIATE|NTLM|ANY|ANYSAFE)|INFO_(EFFECTIVE_URL|HTTP_CODE|HEADER_SIZE|REQUEST_SIZE|TOTAL_TIME|NAMELOOKUP_TIME|CONNECT_TIME|PRETRANSFER_TIME|SIZE_UPLOAD|SIZE_DOWNLOAD|SPEED_DOWNLOAD|SPEED_UPLOAD|FILETIME|SSL_VERIFYRESULT|CONTENT_LENGTH_DOWNLOAD|CONTENT_LENGTH_UPLOAD|STARTTRANSFER_TIME|CONTENT_TYPE|REDIRECT_TIME|REDIRECT_COUNT|HEADER_OUT|PRIVATE|CERTINFO|REDIRECT_URL|PRIMARY_IP)|E_(OK|UNSUPPORTED_PROTOCOL|FAILED_INIT|URL_MALFORMAT|URL_MALFORMAT_USER|COULDNT_RESOLVE_PROXY|COULDNT_RESOLVE_HOST|COULDNT_CONNECT|FTP_(WEIRD_SERVER_REPLY|ACCESS_DENIED|USER_PASSWORD_INCORRECT|WEIRD_PASS_REPLY|WEIRD_USER_REPLY|WEIRD_PASV_REPLY|WEIRD_227_FORMAT|CANT_GET_HOST|CANT_RECONNECT|COULDNT_SET_BINARY|COULDNT_RETR_FILE|WRITE_ERROR|QUOTE_ERROR|COULDNT_STOR_FILE|COULDNT_SET_ASCII|PORT_FAILED|COULDNT_USE_REST|COULDNT_GET_SIZE|BAD_DOWNLOAD_RESUME|SSL_FAILED)|PARTIAL_FILE|HTTP_NOT_FOUND|WRITE_ERROR|MALFORMAT_USER|READ_ERROR|OUT_OF_MEMORY|OPERATION_TIMEOUTED|HTTP_RANGE_ERROR|HTTP_POST_ERROR|SSL_CONNECT_ERROR|FILE_COULDNT_READ_FILE|LDAP_CANNOT_BIND|LDAP_SEARCH_FAILED|LIBRARY_NOT_FOUND|FUNCTION_NOT_FOUND|ABORTED_BY_CALLBACK|BAD_FUNCTION_ARGUMENT|BAD_CALLING_ORDER|HTTP_PORT_FAILED|BAD_PASSWORD_ENTERED|TOO_MANY_REDIRECTS|UNKNOWN_TELNET_OPTION|TELNET_OPTION_SYNTAX|OBSOLETE|SSL_PEER_CERTIFICATE|GOT_NOTHING|SSL_ENGINE_NOTFOUND|SSL_ENGINE_SETFAILED|SEND_ERROR|RECV_ERROR|SHARE_IN_USE|SSL_CERTPROBLEM|SSL_CIPHER|SSL_CACERT|BAD_CONTENT_ENCODING|LDAP_INVALID_URL|FILESIZE_EXCEEDED|SSH)|CLOSEPOLICY_(LEAST_RECENTLY_USED|LEAST_TRAFFIC|SLOWEST|CALLBACK|OLDEST)|VERSION_NOW|MSG_DONE|PROXY_(HTTP|SOCKS4|SOCKS5)|M_(CALL_MULTI_PERFORM|OK|BAD_HANDLE|BAD_EASY_HANDLE|OUT_OF_MEMORY|INTERNAL_ERROR)|FTPAUTH_(DEFAULT|SSL|TLS)|FTPSSL_(NONE|TRY|CONTROL|ALL)|SSH_(AUTH_(NONE|PUBLICKEY|PASSWORD|HOST|KEYBOARD|DEFAULT))|PROTO_(HTTP|HTTPS|FTP|FTPS|SCP|SFTP|TELNET|LDAP|LDAPS|DICT|FILE|TFTP|ALL)|FTPMETHOD_(MULTICWD|NOCWD|SINGLECWD))|DOM(STRING_SIZE_ERR|_(PHP_ERR|INDEX_SIZE_ERR|HIERARCHY_REQUEST_ERR|WRONG_DOCUMENT_ERR|INVALID_CHARACTER_ERR|NO_DATA_ALLOWED_ERR|NO_MODIFICATION_ALLOWED_ERR|NOT_FOUND_ERR|NOT_SUPPORTED_ERR|INUSE_ATTRIBUTE_ERR|INVALID_STATE_ERR|SYNTAX_ERR|INVALID_MODIFICATION_ERR|NAMESPACE_ERR|INVALID_ACCESS_ERR|VALIDATION_ERR))|FILEINFO_(NONE|SYMLINK|MIME|MIME_TYPE|MIME_ENCODING|DEVICES|CONTINUE|PRESERVE_ATIME|RAW)|GD_(BUNDLED|VERSION|MAJOR_VERSION|MINOR_VERSION|RELEASE_VERSION|EXTRA_VERSION)|IMG_(GIF|JPG|JPEG|PNG|WBMP|XPM|COLOR_(TILED|STYLED|BRUSHED|STYLEDBRUSHED|TRANSPARENT)|ARC_(ROUNDED|PIE|CHORD|NOFILL|EDGED)|GD2_(RAW|COMPRESSED)|EFFECT_(REPLACE|ALPHABLEND|NORMAL|OVERLAY)|FILTER_(NEGATE|GRAYSCALE|BRIGHTNESS|CONTRAST|COLORIZE|EDGEDETECT|GAUSSIAN_BLUR|SELECTIVE_BLUR|EMBOSS|MEAN_REMOVAL|SMOOTH|PIXELATE))|PNG_(NO_FILTER|ALL_FILTERS|FILTER_(NONE|SUB|UP|AVG|PAETH))|IMAP_(OPENTIMEOUT|READTIMEOUT|WRITETIMEOUT|CLOSETIMEOUT|GC_ELT|GC_ENV|GC_TEXTS)|SORTDATE|SORTARRIVAL|SORTFROM|SORTSUBJECT|SORTTO|SORTCC|SORTSIZE|JSON_(HEX_(TAG|AMP|APOS|QUOT)|FORCE_OBJECT|NUMERIC_CHECK|UNESCAPED_SLASHES|PRETTY_PRINT|UNESCAPED_UNICODE|OBJECT_AS_ARRAY|BIGINT_AS_STRING|ERROR_(NONE|DEPTH|STATE_MISMATCH|CTRL_CHAR|SYNTAX|UTF8))|EXIF_(USE_MBSTRING)|MCRYPT_(ENCRYPT|DECRYPT|DEV_RANDOM|DEV_URANDOM|RAND|3DES|ARCFOUR_IV|ARCFOUR|BLOWFISH|BLOWFISH_COMPAT|CAST_128|CAST_256|CRYPT|DES|ENIGNA|GOST|LOKI97|PANAMA|RC2|SAFER64|SAFER128|SAFERPLUS|SERPENT|THREEWAY|TRIPLEDES|TWOFISH|WAKE|XTEA|IDEA|MARS|RC6|SKIPJACK|RIJNDAEL_(128|192|256)|MODE_(CBC|CFB|ECB|NOFB|OFB|STREAM))|XSL_(CLONE_(AUTO|NEVER|ALWAYS)|SECPREF_(NONE|READ_FILE|WRITE_FILE|CREATE_DIRECTORY|READ_NETWORK|WRITE_NETWORK|DEFAULT))|LIB(E)?XSLT_(VERSION|DOTTED_VERSION)|UNKNOWN_TYPE|APACHE_MAP|XSD_(STRING|BOOLEAN|DECIMAL|FLOAT|DOUBLE|DURATION|DATETIME|TIME|DATE|GYEARMONTH|GYEAR|GMONTHDAY|GDAY|GMONTH|HEXBINARY|BASE64BINARY|ANYURI|QNAME|NOTATION|NORMALIZEDSTRING|TOKEN|LANGUAGE|NMTOKEN|NAME|NCNAME|ID|IDREF|IDREFS|ENTITY|ENTITIES|INTEGER|NONPOSITIVEINTEGER|NEGATIVEINTEGER|LONG|INT|SHORT|BYTE|NONNEGATIVEINTEGER|UNSIGNEDLONG|UNSIGNEDINT|UNSIGNEDSHORT|UNSIGNEDBYTE|POSITIVEINTEGER|NMTOKENS|ANYTYPE|ANYXML|1999_TIMEINSTANT|NAMESPACE|1999_NAMESPACE)|ION_(CORRUPT_FILE|EXPIRED_FILE|NO_PERMISSIONS|CLOCK_SKEW|UNTRUSTED_EXTENSION|LICENSE_(NOT_FOUND|CORRUPT|EXPIRED|PROPERTY_INVALID|HEADER_INVALID|SERVER_INVALID)|UNAUTH_(INCLUDING_FILE|INCLUDED_FILE|APPEND_PREPEND_FILE))|MB_(OVERLOAD_MAIL|OVERLOAD_STRING|OVERLOAD_REGEX|CASE_UPPER|CASE_LOWER|CASE_TITLE)|IMAGETYPE_(GIF|JPEG|PNG|SWF|PSD|BMP|TIFF_II|TIFF_MM|JPC|JP2|JPX|JB2|SWC|IFF|WBMP|JPEG2000|XBM|ICO|UNKNOWN|COUNT)|IPPROTO_(IP|IPV6)|SOL_(TCP|UDP))\b</string>
					<key>name</key>
					<string>support.constant.std.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(FNM_(NOESCAPE|PATHNAME|PERIOD|CASEFOLD)|PSFS_(PASS_ON|FEED_ME|ERR_FATAL|FLAG_NORMAL|FLAG_FLUSH_INC|FLAG_FLUSH_CLOSE)|POSIX_(F_OK|X_OK|W_OK|R_OK|S_IFREG|S_IFCHR|S_IFBLK|S_IFIFO|S_IFSOCK)|DNS_(A|NS|CNAME|SOA|PTR|HINFO|MX|TXT|SRV|NAPTR|AAAA|A6|ANY|ALL)|SOCK_(STREAM|DGRAM|RAW|SEQPACKET|RDM)|MSG_(OOB|WAITALL|DONTWAIT|PEEK|DONTROUTE|EOR|EOF)|SO_(DEBUG|REUSEADDR|KEEPALIVE|DONTROUTE|LINGER|BROADCAST|OOBINLINE|SNDBUF|RCVBUF|SNDLOWAT|RCVLOWAT|SNDTIMEO|RCVTIMEO|TYPE|ERROR|FREE|NOSERVER)|SOL_SOCKET|SOMAXCONN|TCP_NODELAY|AF_(UNIX|INET|INET6)|LOADER_VERSION|SQLITE_(BOTH|NUM|ASSOC|OK|ERROR|INTERNAL|PERM|ABORT|BUSY|LOCKED|NOMEM|READONLY|INTERRUPT|IOERR|CORRUPT|NOTFOUND|FULL|CANTOPEN|PROTOCOL|EMPTY|SCHEMA|TOOBIG|CONSTRAINT|MISMATCH|MISUSE|NOLFS|AUTH|NOTADB|FORMAT|ROW|DONE)|EACCELERATOR_(VERSION|SHM_AND_DISK|SHM|SHM_ONLY|DISK_ONLY|NONE)|S_(MEMORY|VARS|FILES|INCLUDE|SQL|EXECUTOR|MAIL|SESSION|MISC|INTERNAL|ALL)|OP_(DEBUG|READONLY|ANONYMOUS|SHORTCACHE|SILENT|PROTOTYPE|HALFOPEN|EXPUNGE|SECURE|EXPUNGE)|CL_EXPUNGE|FT_(UID|PEEK|NOT|INTERNAL|PREFETCHTEXT)|ST_(UID|SILENT|SET)|CP_(UID|MOVE)|SE_(UID|FREE|NOPREFETCH)|SA_(MESSAGES|RECENT|UNSEEN|UIDNEXT|UIDVALIDITY|ALL)|LATT_(NOINFERIORS|NOSELECT|MARKED|UNMARKED|REFERRAL|HASCHILDREN|HASNOCHILDREN)|TYPE(TEXT|MULTIPART|MESSAGE|APPLICATION|AUDIO|IMAGE|VIDEO|MODEL|OTHER)|ENC(7BIT|8BIT|BINARY|BASE64|QUOTEDPRINTABLE|OTHER))\b</string>
					<key>name</key>
					<string>support.constant.other.php</string>
				</dict>

				<dict>
					<key>comment</key>
					<string>In PHP, any identifier which is not a variable is taken to be a constant.
				However, if there is no constant defined with the given name then a notice
				is generated and the constant is assumed to have the value of its name.</string>
					<key>match</key>
					<string>[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*</string>
					<key>name</key>
					<string>constant.other.php</string>
				</dict>
			</array>
		</dict>
		<key>function-call</key>
		<dict>
			<key>match</key>
			<string>[A-Za-z_][A-Za-z_0-9]*(?=\s*\()</string>
			<key>name</key>
			<string>meta.function-call.php</string>
		</dict>
		<key>instantiation</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.new.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.php</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.class.php</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)\b(new)\s+(?:(\$[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)|([\w\\]+))|([\w\\]+)(?=::)</string>
		</dict>
		<key>interpolation</key>
		<dict>
			<key>comment</key>
			<string>http://www.php.net/manual/en/language.types.string.php#language.types.string.parsing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[0-7]{1,3}</string>
					<key>name</key>
					<string>constant.numeric.octal.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\x[0-9A-Fa-f]{1,2}</string>
					<key>name</key>
					<string>constant.numeric.hex.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[nrt\\\$\"]</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Simple syntax with braces: "foo${bar}baz"</string>
					<key>match</key>
					<string>(?x)
						((\$\{)(?&lt;name&gt;[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(\}))
						</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.index.php</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.invalid-simple-array-index.php</string>
						</dict>
						<key>13</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.index-end.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.php</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.index-start.php</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.index.php</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>variable.other.index.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Simple syntax: $foo, $foo[0], $foo[$bar], $foo-&gt;bar</string>
					<key>match</key>
					<string>(?x)
						((\$)(?&lt;name&gt;[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*))
						(?:
							(-&gt;)
								(?:
									(\g&lt;name&gt;)
									|
									(\$\g&lt;name&gt;)
								)
							|
							(\[)
								(?:(\d+)|((\$)\g&lt;name&gt;)|(\w+)|(.*?))
							(\])
						)?
						</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=(?&lt;regex&gt;(?#simple syntax)\$(?&lt;name&gt;[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(?:\[(?&lt;index&gt;[a-zA-Z0-9_\x{7f}-\x{ff}]+|\$\g&lt;name&gt;)\]|-&gt;\g&lt;name&gt;(\(.*?\))?)?|(?#simple syntax with braces)\$\{(?:\g&lt;name&gt;(?&lt;indices&gt;\[(?:\g&lt;index&gt;|'(?:\\.|[^'\\])*'|"(?:\g&lt;regex&gt;|\\.|[^"\\])*")\])?|\g&lt;complex&gt;|\$\{\g&lt;complex&gt;\})\}|(?#complex syntax)\{(?&lt;complex&gt;\$(?&lt;segment&gt;\g&lt;name&gt;(\g&lt;indices&gt;*|\(.*?\))?)(?:-&gt;\g&lt;segment&gt;)*|\$\g&lt;complex&gt;|\$\{\g&lt;complex&gt;\})\}))\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Complex syntax. It seems this now supports complex method calls, as of PHP5.
							   I've put wildcards into the function call parameter lists to handle this, but this may break the pattern.
							   It also might be better to disable it as I shouldn't imagine it's used often (hopefully) and it may confuse PHP4 users.</string>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-call</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#var_basic</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#object</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#numbers</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\[</string>
							<key>name</key>
							<string>keyword.operator.index-start.php</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\]</string>
							<key>name</key>
							<string>keyword.operator.index-end.php</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>language</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=&lt;&lt;&lt;\s*(HTML|XML|SQL|JAVASCRIPT)\s*$)</string>
					<key>end</key>
					<string>(?!&lt;?&lt;&lt;\s*(HTML|XML|SQL|JAVASCRIPT)\s*$)</string>
					<key>name</key>
					<string>string.unquoted.heredoc.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(&lt;&lt;&lt;)\s*(HTML)\s*$\n?</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>text.html</string>
							<key>end</key>
							<string>^(HTML)(;?)$\n?</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.embedded.html</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.html.basic</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#interpolation</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&lt;&lt;&lt;)\s*(XML)\s*$\n?</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>text.xml</string>
							<key>end</key>
							<string>^(XML)(;?)$\n?</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.embedded.xml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.xml</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#interpolation</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&lt;&lt;&lt;)\s*(SQL)\s*$\n?</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>source.sql</string>
							<key>end</key>
							<string>^(SQL)(;?)$\n?</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.embedded.sql</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.sql</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#interpolation</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&lt;&lt;&lt;)\s*(JAVASCRIPT)\s*$\n?</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>source.js</string>
							<key>end</key>
							<string>^(JAVASCRIPT)(;?)$\n?</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.embedded.js</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.js</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#interpolation</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*\*(?:#@\+)?\s*$</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>This now only highlights a docblock if the first line contains only /**
								- this is to stop highlighting everything as invalid when people do comment banners with /******** ...
								- Now matches /**#@+ too - used for docblock templates: http://manual.phpdoc.org/HTMLframesConverter/default/phpDocumentor/tutorial_phpDocumentor.howto.pkg.html#basics.docblocktemplate</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.phpdoc.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#php_doc</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*?($\n?|(?=\?&gt;))</string>
					<key>name</key>
					<string>comment.line.double-slash.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#).*?($\n?|(?=\?&gt;))</string>
					<key>name</key>
					<string>comment.line.number-sign.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(?i)\s*(interface)\s+([a-z0-9_]+)\s*(extends)?\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.interface.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.interface.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.extends.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.interface.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>[a-zA-Z0-9_]+</string>
							<key>name</key>
							<string>entity.other.inherited-class.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(abstract|final)?\s*(class)\s+([a-z0-9_]+)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.abstract.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.class.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.class.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.extends.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.other.inherited-class.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?i:(extends))\s+([a-zA-Z0-9_]+)\s*</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i:(implements))\s+([a-zA-Z0-9_]+)\s*</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.implements.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>support.class.implements.php</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\s*\b(?i:(extends)))|$</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>support.class.implements.php</string>
										</dict>
									</dict>
									<key>match</key>
									<string>,\s*([a-zA-Z0-9_]+)\s*</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(break|c(ase|ontinue)|d(e(clare|fault)|ie|o)|e(lse(if)?|nd(declare|for(each)?|if|switch|while)|xit)|for(each)?|if|return|switch|use|while)\b</string>
					<key>name</key>
					<string>keyword.control.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b((?:require|include)(?:_once)?)\b\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.include.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s|;|$)</string>
					<key>name</key>
					<string>meta.include.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.exception.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.class.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(catch)\b\s*\(\s*([A-Za-z_][A-Za-z_0-9]*)\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)\s*\)</string>
					<key>name</key>
					<string>meta.catch.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(catch|try|throw|exception|finally)\b</string>
					<key>name</key>
					<string>keyword.control.exception.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:^\s*)((?:(?:final|abstract|public|private|protected|static)\s+)*)(function)(?:(?:\s+|(\s*&amp;\s*))|::)(?:(__(?:call|(?:con|de)struct|get|(?:is|un)?set|tostring|clone|set_state|sleep|wakeup|autoload))|([a-zA-Z0-9_]+))\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.function.magic.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function.arguments.php</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?x)
									\s*(array) # Typehint
									\s*(&amp;)? 					# Reference
									\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*) # The variable name
									\s*(=)	# A default value
									\s*(array)\s*(\()
									</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>variable.other.php</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.variable.php</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.php</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>support.function.construct.php</string>
								</dict>
								<key>7</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.array.begin.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.array.php</string>
							<key>end</key>
							<string>\)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.array.end.php</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function.argument.array.php</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#strings</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#numbers</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>variable.other.php</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.variable.php</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.php</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>constant.language.php</string>
								</dict>
								<key>7</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.non-null-typehinted.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?x)
									\s*(array) # Typehint
									\s*(&amp;)? 					# Reference
									\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*) # The variable name
									(?:
										\s*(=)	# A default value
										\s*(?i:
											(NULL)
											|
											(\S.*?)
											)?
									)?
									\s*(?=,|\)) # A closing parentheses (end of argument list) or a comma
									</string>
							<key>name</key>
							<string>meta.function.argument.array.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.class.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>variable.other.php</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.variable.php</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.php</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>constant.language.php</string>
								</dict>
								<key>7</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.non-null-typehinted.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?x)
									\s*([A-Za-z_][A-Za-z_0-9]*) # Typehinted class name
									\s*(&amp;)? 					# Reference
									\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*) # The variable name
									(?:
										\s*(=)	# A default value
										\s*(?i:
											(NULL)
											|
											(\S.*?)
											)?
									)?
									\s*(?=,|\)) # A closing parentheses (end of argument list) or a comma
									</string>
							<key>name</key>
							<string>meta.function.argument.typehinted.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.other.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.variable.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\s*&amp;)?\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)\s*(?=,|\))</string>
							<key>name</key>
							<string>meta.function.argument.no-default.php</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\s*&amp;)?\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(?:\s*(=)\s*)\s*</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.other.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.variable.php</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.php</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=,|\))</string>
							<key>name</key>
							<string>meta.function.argument.default.php</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#parameter-default-types</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>/\*</string>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.php</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\*/</string>
							<key>name</key>
							<string>comment.block.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(real|double|float|int(eger)?|bool(ean)?|string|class|clone|var|function|interface|parent|self|object)\b</string>
					<key>name</key>
					<string>storage.type.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(global|abstract|const|extends|implements|final|p(r(ivate|otected)|ublic)|static)\b</string>
					<key>name</key>
					<string>storage.modifier.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#object</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.static.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.class.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.other.class.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)(::)
                        (?:
        				    ([A-Za-z_][A-Za-z_0-9]*)\s*\(
        				    |
        				    ((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
        				    |
        				    ([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
        				)?</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*([a-zA-Z_]+[a-zA-Z0-9_]*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^(\2)(;?)$</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.unquoted.heredoc.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>=&gt;</string>
					<key>name</key>
					<string>keyword.operator.key.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;(?=\s*(\$|new|[A-Za-z_][A-Za-z_0-9]+(?=\s*\()))</string>
					<key>name</key>
					<string>storage.modifier.reference.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.expression.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(@)</string>
					<key>name</key>
					<string>keyword.operator.error-control.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-\-|\+\+)</string>
					<key>name</key>
					<string>keyword.operator.increment-decrement.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-|\+|\*|/|%)</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(!|&amp;&amp;|\|\|)|\b(and|or|xor|as)\b</string>
					<key>name</key>
					<string>keyword.operator.logical.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;&lt;|&gt;&gt;|~|\^|&amp;|\|</string>
					<key>name</key>
					<string>keyword.operator.bitwise.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(===|==|!==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;)</string>
					<key>name</key>
					<string>keyword.operator.comparison.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\.=|\.)</string>
					<key>name</key>
					<string>keyword.operator.string.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>keyword.operator.assignment.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.type.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.class.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)\b(instanceof)\b(?:\s+(\w+))?</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-backtick</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;=[a-zA-Z0-9_\x{7f}-\x{ff}])(-&gt;)([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*?)\b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#instantiation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b</string>
			<key>name</key>
			<string>constant.numeric.php</string>
		</dict>
		<key>object</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.class.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.function-call.object.php</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.other.property.php</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)(-&gt;)
    				(?:
    				    ([A-Za-z_][A-Za-z_0-9]*)\s*\(
    				    |
    				    ((\$+)?[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
    				)?</string>
		</dict>
		<key>parameter-default-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-backtick</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=&gt;</string>
					<key>name</key>
					<string>keyword.operator.key.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>keyword.operator.assignment.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;(?=\s*\$)</string>
					<key>name</key>
					<string>storage.modifier.reference.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(array)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.array.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parameter-default-types</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#instantiation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
			</array>
		</dict>
		<key>php_doc</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>PHPDocumentor only recognises lines with an asterisk as the first non-whitespaces character</string>
					<key>match</key>
					<string>^(?!\s*\*).*$\n?</string>
					<key>name</key>
					<string>invalid.illegal.missing-asterisk.phpdoc.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.phpdoc.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.wrong-access-type.phpdoc.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*\*\s*(@access)\s+((public|private|protected)|(.+))\s*$</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((https?|s?ftp|ftps|file|smb|afp|nfs|(x-)?man|gopher|txmt)://|mailto:)[-:@a-zA-Z0-9_.~%+/?=&amp;#]+(?&lt;![.?:])</string>
					<key>name</key>
					<string>markup.underline.link.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.phpdoc.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>markup.underline.link.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(@xlink)\s+(.+)\s*$</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\@(a(bstract|uthor)|c(ategory|opyright)|example|global|internal|li(cense|nk)|pa(ckage|ram)|return|s(ee|ince|tatic|ubpackage)|t(hrows|odo)|v(ar|ersion)|uses|deprecated|final)\b</string>
					<key>name</key>
					<string>keyword.other.phpdoc.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.phpdoc.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\{(@(link)).+?\}</string>
					<key>name</key>
					<string>meta.tag.inline.phpdoc.php</string>
				</dict>
			</array>
		</dict>
		<key>regex-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>(?x)"/ (?= (\\.|[^"/])++/[imsxeADSUXu]*" )</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)([imsxeADSUXu]*)(")</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.double-quoted.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Escaped from the regexp – there can also be 2 backslashes (since 1 will escape the first)</string>
					<key>match</key>
					<string>(\\){1,2}[.$^\[\]{}]</string>
					<key>name</key>
					<string>constant.character.escape.regex.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repitition.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repitition.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\{)\d+(,\d+)?(\})</string>
					<key>name</key>
					<string>string.regexp.arbitrary-repitition.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[(?:\^?\])?</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>string.regexp.character-class.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[$^+*]</string>
					<key>name</key>
					<string>keyword.operator.regexp.php</string>
				</dict>
			</array>
		</dict>
		<key>regex-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>(?x)'/ (?= (\\.|[^'/])++/[imsxeADSUXu]*' )</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)([imsxeADSUXu]*)(')</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.single-quoted.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repitition.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repitition.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\{)\d+(,\d+)?(\})</string>
					<key>name</key>
					<string>string.regexp.arbitrary-repitition.php</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Escaped from the regexp – there can also be 2 backslashes (since 1 will escape the first)</string>
					<key>match</key>
					<string>(\\){1,2}[.$^\[\]{}]</string>
					<key>name</key>
					<string>constant.character.escape.regex.php</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Escaped from the PHP string – there can also be 2 backslashes (since 1 will escape the first)</string>
					<key>match</key>
					<string>\\{1,2}[\\']</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[(?:\^?\])?</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>string.regexp.character-class.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[\\'\[\]]</string>
							<key>name</key>
							<string>constant.character.escape.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[$^+*]</string>
					<key>name</key>
					<string>keyword.operator.regexp.php</string>
				</dict>
			</array>
		</dict>
		<key>sql-string-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"\s*(?=(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>source.sql.embedded.php</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.sql.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>#(\\"|[^"])*(?="|$\n?)</string>
					<key>name</key>
					<string>comment.line.number-sign.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--(\\"|[^"])*(?="|$\n?)</string>
					<key>name</key>
					<string>comment.line.double-dash.sql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'(?=[^']*?")</string>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>end</key>
					<string>(?=")</string>
					<key>name</key>
					<string>string.quoted.single.unclosed.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[\\']</string>
							<key>name</key>
							<string>constant.character.escape.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`(?=[^`]*?")</string>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>end</key>
					<string>(?=")</string>
					<key>name</key>
					<string>string.quoted.other.backtick.unclosed.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[\\']</string>
							<key>name</key>
							<string>constant.character.escape.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\\"(?!([^\\"]|\\[^"])*\\")(?=(\\[^"]|.)*?")</string>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>end</key>
					<string>(?=")</string>
					<key>name</key>
					<string>string.quoted.double.unclosed.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[\\']</string>
							<key>name</key>
							<string>constant.character.escape.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\\"</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\\"</string>
					<key>name</key>
					<string>string.quoted.double.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>end</key>
					<string>`</string>
					<key>name</key>
					<string>string.quoted.other.backtick.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.single.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.sql</string>
				</dict>
			</array>
		</dict>
		<key>sql-string-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'\s*(?=(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>source.sql.embedded.php</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.sql.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>#(\\'|[^'])*(?='|$\n?)</string>
					<key>name</key>
					<string>comment.line.number-sign.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--(\\'|[^'])*(?='|$\n?)</string>
					<key>name</key>
					<string>comment.line.double-dash.sql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\\'(?!([^\\']|\\[^'])*\\')(?=(\\[^']|.)*?')</string>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>end</key>
					<string>(?=')</string>
					<key>name</key>
					<string>string.quoted.single.unclosed.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[\\']</string>
							<key>name</key>
							<string>constant.character.escape.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`(?=[^`]*?')</string>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>end</key>
					<string>(?=')</string>
					<key>name</key>
					<string>string.quoted.other.backtick.unclosed.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[\\']</string>
							<key>name</key>
							<string>constant.character.escape.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>"(?=[^"]*?')</string>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>end</key>
					<string>(?=')</string>
					<key>name</key>
					<string>string.quoted.double.unclosed.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[\\']</string>
							<key>name</key>
							<string>constant.character.escape.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\\'</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\\'</string>
					<key>name</key>
					<string>string.quoted.single.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[\\']</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.sql</string>
				</dict>
			</array>
		</dict>
		<key>string-backtick</key>
		<dict>
			<key>begin</key>
			<string>`</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>`</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.interpolated.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
			</array>
		</dict>
		<key>string-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>This contentName is just to allow the usage of “select scope” to select the string contents first, then the string with quotes</string>
			<key>contentName</key>
			<string>meta.string-contents.quoted.double.php</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
			</array>
		</dict>
		<key>string-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.string-contents.quoted.single.php</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[\\']</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#regex-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sql-string-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regex-single-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sql-string-single-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-single-quoted</string>
				</dict>
			</array>
		</dict>
		<key>support</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(array)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.array.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(huffle|ort)|n(ext|at(sort|casesort))|pos|sizeof|key_exists|c(o(unt|mpact)|urrent)|in_array|u(sort|ksort|asort)|prev|e(nd|xtract)|k(sort|ey|rsort)|a(sort|r(sort|ray_(s(hift|um|plice|earch|lice)|c(h(unk|ange_key_case)|o(unt_values|mbine))|intersect(_(u(key|assoc)|key|assoc))?|diff(_(u(key|assoc)|key|assoc))?|u(n(shift|ique)|intersect(_(uassoc|assoc))?|diff(_(uassoc|assoc))?)|p(op|ush|ad|roduct)|values|key(s|_exists)|f(il(ter|l(_keys)?)|lip)|walk(_recursive)?|r(e(duce|verse)|and)|m(ultisort|erge(_recursive)?|ap)|replace|replace_recursive)))|r(sort|eset|ange)|m(in|ax))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.array.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bassert(_options)?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.assert.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_attr_is_id(?=\s*\()</string>
					<key>name</key>
					<string>support.function.attr.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bbase64_(decode|encode)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.base64.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(highlight_(string|file)|s(ys_getloadavg|et_(include_path|magic_quotes_runtime)|leep)|c(on(stant|nection_(status|aborted))|all_user_(func(_array)?|method(_array)?))|time_(sleep_until|nanosleep)|i(s_uploaded_file|n(i_(set|restore|alter|get(_all)?)|et_(ntop|pton))|p2long|gnore_user_abort|mport_request_variables)|u(sleep|nregister_tick_function)|error_(log|get_last)|p(hp_strip_whitespace|utenv|arse_ini_(file|string)|rint_r)|flush|long2ip|re(store_include_path|gister_(shutdown_function|tick_function))|get(servby(name|port)|opt|_(c(urrent_user|fg_var)|include_path|magic_quotes_(gpc|runtime))|protobyn(umber|ame)|env)|move_uploaded_file|magic_quotes_runtime|forward_(static_call|static_call_array)|http_(response_code)|show_source)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.basic_functions.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bbc(s(cale|ub|qrt)|comp|div|pow(mod)?|add|m(od|ul))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.bcmath.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bbirdstep_(c(o(nnect|mmit)|lose)|off_autocommit|exec|f(ieldn(um|ame)|etch|reeresult)|autocommit|r(ollback|esult))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.birdstep.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bget_browser(?=\s*\()</string>
					<key>name</key>
					<string>support.function.browscap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(tr(nc(asecmp|mp)|c(asecmp|mp)|len)|et_e(rror_handler|xception_handler))|c(lass_exists|lass_alias|reate_function)|trigger_error|user_error|i(s_(subclass_of|a)|nterface_exists)|de(fine(d)?|bug_(print_backtrace|backtrace))|zend_version|property_exists|e(ach|rror_reporting|xtension_loaded)|trait_(exists)|func(tion_exists|_(num_args|get_arg(s)?))|leak|restore_e(rror_handler|xception_handler)|get_(called_class|class(_(vars|methods))?|included_files|required_files|de(clared_(classes|interfaces|traits)|fined_(constants|vars|functions))|object_vars|extension_funcs|parent_class|loaded_extensions|resource_type)|method_exists|gc_(collect_cycles|enabled|enable|disable))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.builtin_functions.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bbz(compress|decompress|open|err(str|no|or)|read|write|flush|close)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.bz2.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(jdtounix|unixtojd)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.cal_unix.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(cal_(to_jd|info|days_in_month|from_jd)|j(d(to(j(ulian|ewish)|french|gregorian)|dayofweek|monthname)|uliantojd|ewishtojd)|frenchtojd|gregoriantojd)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.calendar.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_characterdata_(substring_data|insert_data|delete_data|append_data|replace_data)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.characterdata.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bcom_(create_guid|print_typeinfo|event_sink|load_typelib|get_active_object|message_pump)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.com_com.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bvariant_(s(ub|et(_type)?)|n(ot|eg)|c(a(st|t)|mp)|i(nt|div|mp)|or|d(iv|ate_(to_timestamp|from_timestamp))|pow|eqv|fix|a(nd|dd|bs)|get_type|round|xor|m(od|ul))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.com_variant.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bcrc32(?=\s*\()</string>
					<key>name</key>
					<string>support.function.crc32.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bcrypt(?=\s*\()</string>
					<key>name</key>
					<string>support.function.crypt.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bctype_(space|cntrl|digit|upper|p(unct|rint)|lower|al(num|pha)|graph|xdigit)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.ctype.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bconvert_cyr_string(?=\s*\()</string>
					<key>name</key>
					<string>support.function.cyr_convert.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bstrptime(?=\s*\()</string>
					<key>name</key>
					<string>support.function.datetime.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdba_(handlers|sync|nextkey|close|insert|delete|op(timize|en)|exists|popen|key_split|f(irstkey|etch)|list|replace)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.dba.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdbase_(num(fields|records)|c(lose|reate)|delete_record|open|pack|add_record|get_(header_info|record(_with_names)?)|replace_record)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.dbase.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(scandir|c(h(dir|root)|losedir)|dir|opendir|re(addir|winddir)|g(etcwd|lob))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.dir.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdl(?=\s*\()</string>
					<key>name</key>
					<string>support.function.dl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(dns_(check_record|get_(record|mx))|gethost(by)?(name(l)?|addr)|checkdnsrr|getmxrr)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.dns.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_document_(s(chema_validate(_file)?|ave(_html(_file)?|xml)?)|normalize_document|create_(c(datasection|omment)|text_node|document_fragment|processing_instruction|e(ntity_reference|lement(_ns)?)|attribute(_ns)?)|import_node|validate|load(_html(_file)?|xml)?|adopt_node|re(name_node|laxNG_validate_(file|xml))|get_element(s_by_tag_name(_ns)?|_by_id)|xinclude)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.document.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_domconfiguration_(set_parameter|can_set_parameter|get_parameter)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.domconfiguration.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_domerrorhandler_handle_error(?=\s*\()</string>
					<key>name</key>
					<string>support.function.domerrorhandler.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_domimplementation_(has_feature|create_document(_type)?|get_feature)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.domimplementation.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_domimplementationlist_item(?=\s*\()</string>
					<key>name</key>
					<string>support.function.domimplementationlist.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_domimplementationsource_get_domimplementation(s)?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.domimplementationsource.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_domstringlist_item(?=\s*\()</string>
					<key>name</key>
					<string>support.function.domstringlist.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\beaster_da(ys|te)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.easter.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_element_(has_attribute(_ns)?|set_(id_attribute(_n(s|ode))?|attribute(_n(s|ode(_ns)?))?)|remove_attribute(_n(s|ode))?|get_(elements_by_tag_name(_ns)?|attribute(_n(s|ode(_ns)?))?))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.element.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(hell_exec|ystem)|p(assthru|roc_nice)|e(scapeshell(cmd|arg)|xec))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.exec.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bexif_(imagetype|t(humbnail|agname)|read_data)|(read_exif_data)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.exif.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfdf_(header|s(et_(s(tatus|ubmit_form_action)|target_frame|o(n_import_javascript|pt)|javascript_action|encoding|v(ersion|alue)|f(ile|lags)|ap)|ave(_string)?)|next_field_name|c(lose|reate)|open(_string)?|e(num_values|rr(no|or))|add_(template|doc_javascript)|remove_item|get_(status|opt|encoding|v(ersion|alue)|f(ile|lags)|a(ttachment|p)))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.fdf.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(sys_get_temp_dir|copy|t(empnam|mpfile)|u(nlink|mask)|p(close|open)|f(s(canf|tat|eek)|nmatch|close|t(ell|runcate)|ile(_(put_contents|get_contents))?|open|p(utcsv|assthru)|eof|flush|write|puts|lock|read|get(s(s)?|c(sv)?))|r(e(name|a(dfile|lpath)|wind)|mdir)|get_meta_tags|mkdir|finfo_(open|close|set_flags|file|buffer))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.file.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(stat|c(h(own|grp|mod)|learstatcache)|is_(dir|executable|file|link|writable|writeable|readable)|touch|disk_(total_space|free_space)|file(size|ctime|type|inode|owner|_exists|perms|atime|group|mtime)|l(stat|chgrp)|lchown|diskfreespace|realpath_(cache_size|cache_get))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.filestat.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfilter_(has_var|input(_array)?|var(_array)?|list|id)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.filter.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(sprintf|printf|v(sprintf|printf|fprintf)|fprintf)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.formatted_print.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(pfsockopen|fsockopen)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.fsock.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bftok(?=\s*\()</string>
					<key>name</key>
					<string>support.function.ftok.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(image(s(y|tring(up)?|et(style|t(hickness|ile)|pixel|brush)|avealpha|x)|c(har(up)?|o(nvolution|py(res(ized|ampled)|merge(gray)?)?|lor(s(total|et|forindex)|closest(hwb|alpha)?|transparent|deallocate|exact(alpha)?|a(t|llocate(alpha)?)|resolve(alpha)?|match))|reate(truecolor|from(string|jpeg|png|wbmp|g(if|d(2(part)?)?)|x(pm|bm)))?)|2wbmp|t(ypes|tf(text|bbox)|ruecolortopalette)|i(struecolor|nterlace)|d(estroy|ashedline)|jpeg|ellipse|p(s(slantfont|copyfont|text|e(ncodefont|xtendfont)|freefont|loadfont|bbox)|ng|olygon|alettecopy)|f(t(text|bbox)|il(ter|l(toborder|ed(polygon|ellipse|arc|rectangle))?)|ont(height|width))|wbmp|a(ntialias|lphablending|rc)|l(ine|oadfont|ayereffect)|r(otate|ectangle)|g(if|d(2)?|ammacorrect|rab(screen|window))|xbm)|jpeg2wbmp|png2wbmp|gd_info)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.gd.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(ngettext|textdomain|d(ngettext|c(ngettext|gettext)|gettext)|gettext|bind(textdomain|_textdomain_codeset)|_)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.gettext.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bgmp_(hamdist|s(can(1|0)|ign|trval|ub|etbit|qrt(rem)?)|c(om|lrbit|mp)|ne(g|xtprime)|in(tval|it|vert)|or|div(_(q(r)?|r)|exact)?|jacobi|testbit|p(o(pcount|w(m)?)|erfect_square|rob_prime)|fact|legendre|a(nd|dd|bs)|random|gcd(ext)?|xor|m(od|ul))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.gmp.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bhash(_(hmac(_file)?|init|update(_(stream|file))?|fi(nal|le)|algos|copy))?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.hash.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmd5(_file)?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.hash_md.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsha1(_file)?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.hash_sha.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(set(cookie|rawcookie)|header(s_(sent|list))?)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.head.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(html(specialchars(_decode)?|_entity_decode|entities)|get_html_translation_table)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.html.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bhttp_build_query(?=\s*\()</string>
					<key>name</key>
					<string>support.function.http.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bibase_blob_(c(ancel|lose|reate)|i(nfo|mport)|open|echo|add|get)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.ibase_blobs.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bibase_(set_event_handler|free_event_handler|wait_event)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.ibase_events.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bibase_(n(um_(params|fields|rows)|ame_result)|execute|p(aram_info|repare)|f(ield_info|etch_(object|assoc|row)|ree_(query|result))|query|affected_rows)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.ibase_query.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bibase_(serv(ice_(detach|attach)|er_info)|d(elete_user|b_info)|add_user|restore|backup|m(odify_user|aintain_db))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.ibase_service.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(iconv(_(s(tr(pos|len|rpos)|ubstr|et_encoding)|get_encoding|mime_(decode(_headers)?|encode)))?|ob_iconv_handler)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.iconv.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(image_type_to_(extension|mime_type)|getimagesize(fromstring)?)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.image.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(zend_logo_guid|php(credits|info|_(sapi_name|ini_(scanned_files|loaded_file)|uname|egg_logo_guid|logo_guid|real_logo_guid)|version))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.info.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bibase_(c(o(nnect|mmit(_ret)?)|lose)|trans|drop_db|pconnect|err(code|msg)|gen_id|rollback(_ret)?)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.interbase.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bcurl_(setopt(_array)?|c(opy_handle|lose)|init|e(rr(no|or)|xec)|version|getinfo)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.interface.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\biptc(parse|embed)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.iptc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bjson_(decode|encode|last_error)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.json.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\blcg_value(?=\s*\()</string>
					<key>name</key>
					<string>support.function.lcg.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bldap_(s(tart_tls|ort|e(t_(option|rebind_proc)|arch)|asl_bind)|next_(entry|attribute|reference)|co(nnect|unt_entries|mpare)|t61_to_8859|8859_to_t61|d(n2ufn|elete)|unbind|parse_re(sult|ference)|e(rr(no|2str|or)|xplode_dn)|f(irst_(entry|attribute|reference)|ree_result)|add|list|get_(option|dn|entries|values_len|attributes)|re(name|ad)|mod_(del|add|replace)|bind)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.ldap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\blevenshtein(?=\s*\()</string>
					<key>name</key>
					<string>support.function.levenshtein.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\blibxml_(set_streams_context|clear_errors|use_internal_errors|disable_entity_loader|set_external_entity_loader|get_(errors|last_error))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.libxml.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(symlink|link(info)?|readlink)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.link.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(ezmlm_hash|mail)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.mail.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bset_time_limit(?=\s*\()</string>
					<key>name</key>
					<string>support.function.main.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(h(ypot|exdec)|s(in(h)?|qrt)|number_format|c(os(h)?|eil)|is_(nan|infinite|finite)|tan(h)?|octdec|de(c(hex|oct|bin)|g2rad)|exp(m1)?|p(i|ow)|f(loor|mod)|log(1(p|0))?|a(sin(h)?|cos(h)?|tan(h|2)?|bs)|r(ound|ad2deg)|b(indec|ase_convert))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.math.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmb_(s(tr(str|cut|to(upper|lower)|i(str|pos|mwidth)|pos|width|len|r(chr|i(chr|pos)|pos))|ubst(itute_character|r(_count)?)|end_mail)|http_(input|output)|c(heck_encoding|onvert_(case|encoding|variables|kana))|internal_encoding|output_handler|de(code_(numericentity|mimeheader)|tect_(order|encoding))|encode_(numericentity|mimeheader)|p(arse_str|referred_mime_name)|l(ist_(encodings(_alias_names)?|mime_names)|anguage)|get_info|encoding_aliases)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.mbstring.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bm(crypt_(c(fb|reate_iv|bc)|ofb|decrypt|e(cb|nc(_(self_test|is_block_(algorithm(_mode)?|mode)|get_(supported_key_sizes|iv_size|key_size|algorithms_name|modes_name|block_size))|rypt))|list_(algorithms|modes)|ge(neric(_(init|deinit|end))?|t_(cipher_name|iv_size|key_size|block_size))|module_(self_test|close|is_block_(algorithm(_mode)?|mode)|open|get_(supported_key_sizes|algo_(key_size|block_size))))|decrypt_generic)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.mcrypt.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmd5(_file)?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.md5.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmetaphone(?=\s*\()</string>
					<key>name</key>
					<string>support.function.metaphone.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmhash(_(count|keygen_s2k|get_(hash_name|block_size)))?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.mhash.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(get(timeofday|rusage)|microtime)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.microtime.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmime_content_type(?=\s*\()</string>
					<key>name</key>
					<string>support.function.mime_magic.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(swf(prebuiltclip_init|videostream_init)|ming_(set(scale|cubicthreshold)|use(swfversion|constants)|keypress))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.ming.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bcurl_multi_(select|close|in(it|fo_read)|exec|add_handle|getcontent|remove_handle)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.multi.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqli_(s(sl_set|t(ore_result|at|mt_(s(tore_result|end_long_data|qlstate)|num_rows|close|in(sert_id|it)|data_seek|p(aram_count|repare)|e(rr(no|or)|xecute)|f(ield_count|etch|ree_result)|a(ttr_(set|get)|ffected_rows)|res(ult_metadata|et)|bind_(param|result)))|e(t_local_infile_(handler|default)|lect_db)|qlstate)|n(um_(fields|rows)|ext_result)|c(ha(nge_user|racter_set_name)|ommit|lose)|thread_(safe|id)|in(sert_id|it|fo)|options|d(ump_debug_info|ebug|ata_seek)|use_result|p(ing|repare)|err(no|or)|kill|f(ield_(seek|count|tell)|etch_(field(s|_direct)?|lengths|row)|ree_result)|warning_count|a(utocommit|ffected_rows)|r(ollback|eal_(connect|escape_string|query))|get_(server_(info|version)|host_info|client_(info|version)|proto_info)|more_results|error_list|execute|stmt_error_list|refresh|escape_string|set_opt|bind_(param|result)|client_encoding|fetch|param_count|get_metadata|send_long_data)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.mysqli_api.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqli_embedded_server_(start|end)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.mysqli_embedded.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqli_(s(tmt_get_warnings|et_charset)|connect(_err(no|or))?|query|fetch_(object|a(ssoc|rray))|get_(charset|warnings)|multi_query)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.mysqli_nonapi.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqli_(s(end_query|lave_query)|disable_r(pl_parse|eads_from_master)|enable_r(pl_parse|eads_from_master)|rpl_(p(arse_enabled|robe)|query_type)|master_query)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.mysqli_repl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqli_report(?=\s*\()</string>
					<key>name</key>
					<string>support.function.mysqli_report.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_namednodemap_(set_named_item(_ns)?|item|remove_named_item(_ns)?|get_named_item(_ns)?)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.namednodemap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_namelist_get_name(space_uri)?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.namelist.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bncurses_(s(how_panel|cr(_(set|init|dump|restore)|l)|ta(nd(out|end)|rt_color)|lk_(set|noutrefresh|c(olor|lear)|init|touch|attr(set|o(n|ff))?|re(store|fresh))|avetty)|h(ide_panel|line|a(s_(colors|i(c|l)|key)|lfdelay))|n(o(nl|cbreak|echo|qiflush|raw)|ew(_panel|pad|win)|apms|l)|c(olor_(set|content)|urs_set|l(ear|rto(eol|bot))|an_change_color|break)|t(ypeahead|imeout|op_panel|erm(name|attrs))|i(sendwin|n(s(str|ch|tr|delln|ertln)|ch|it(_(color|pair))?))|d(oupdate|e(f(ine_key|_(shell_mode|prog_mode))|l(ch|_panel|eteln|ay_output|win)))|u(se_(default_colors|e(nv|xtended_names))|nget(ch|mouse)|pdate_panels)|p(noutrefresh|utp|a(nel_(window|above|below)|ir_content)|refresh)|e(cho(char)?|nd|rase(char)?)|v(idattr|line)|k(illchar|ey(ok|pad))|qiflush|f(ilter|l(ushinp|ash))|longname|w(stand(out|end)|hline|noutrefresh|c(olor_set|lear)|erase|vline|a(ttr(set|o(n|ff))|dd(str|ch))|getch|refresh|mo(use_trafo|ve)|border)|a(ssume_default_colors|ttr(set|o(n|ff))|dd(str|nstr|ch(str|nstr)?))|r(e(set(ty|_(shell_mode|prog_mode))|place_panel|fresh)|aw)|get(yx|ch|m(ouse|axyx))|b(o(ttom_panel|rder)|eep|kgd(set)?|audrate)|m(o(use(interval|_trafo|mask)|ve(_panel)?)|eta|v(hline|cur|inch|delch|vline|waddstr|add(str|nstr|ch(str|nstr)?)|getch)))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.ncurses_functions.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_node_(set_user_data|has_(child_nodes|attributes)|normalize|c(ompare_document_position|lone_node)|i(s_(s(upported|ame_node)|default_namespace|equal_node)|nsert_before)|lookup_(namespace_uri|prefix)|append_child|get_(user_data|feature)|re(place_child|move_child))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.node.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_nodelist_item(?=\s*\()</string>
					<key>name</key>
					<string>support.function.nodelist.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bnsapi_(virtual|re(sponse_headers|quest_headers))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.nsapi.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\boci(setbufferinglob|_(s(tatement_type|e(t_prefetch|rver_version))|c(o(nnect|llection_(size|trim|element_(assign|get)|a(ssign|ppend)|max)|mmit)|lose|ancel)|n(um_(fields|rows)|ew_(c(o(nnect|llection)|ursor)|descriptor))|internal_debug|define_by_name|p(connect|a(ssword_change|rse))|e(rror|xecute)|f(ield_(s(cale|ize)|name|is_null|type(_raw)?|precision)|etch(_(object|a(ssoc|ll|rray)|row))?|ree_(statement|collection|descriptor))|lob_(s(ize|eek|ave)|c(opy|lose)|t(ell|runcate)|i(s_equal|mport)|e(of|rase|xport)|flush|append|write(_temporary)?|load|re(wind|ad))|r(ollback|esult)|bind_(array_by_name|by_name))|fetchinto|getbufferinglob)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.oci8_interface.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bopenssl_(s(ign|eal)|csr_(sign|new|export(_to_file)?|get_(subject|public_key))|open|error_string|p(ublic_(decrypt|encrypt)|k(cs(12_(export(_to_file)?|read)|7_(sign|decrypt|encrypt|verify))|ey_(new|export(_to_file)?|free|get_(details|p(ublic|rivate))))|rivate_(decrypt|encrypt))|verify|x509_(check(_private_key|purpose)|parse|export(_to_file)?|free|read)|free_key|get_(privatekey|publickey|md_methods|cipher_methods)|digest|encrypt|decrypt|cipher_iv_length|dh_compute_key|random_pseudo_bytes)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.openssl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bo(utput_(add_rewrite_var|reset_rewrite_vars)|b_(start|clean|implicit_flush|end_(clean|flush)|flush|list_handlers|get_(status|c(ontents|lean)|flush|le(ngth|vel))))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.output.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(unpack|pack)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.pack.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bget(lastmod|my(inode|uid|pid|gid))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.pageinfo.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpcntl_(s(ignal|etpriority)|exec|fork|w(stopsig|termsig|if(s(ignaled|topped)|exited)|exitstatus|ait(pid)?)|alarm|getpriority)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.pcntl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpdo_drivers(?=\s*\()</string>
					<key>name</key>
					<string>support.function.pdo.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpdo_drivers(?=\s*\()</string>
					<key>name</key>
					<string>support.function.pdo_dbh.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpg_(se(nd_(execute|prepare|query(_params)?)|t_(client_encoding|error_verbosity)|lect)|host|num_(fields|rows)|c(o(n(nect(ion_(status|reset|busy))?|vert)|py_(to|from))|ancel_query|l(ient_encoding|ose))|insert|t(ty|ra(nsaction_status|ce))|options|d(elete|bname)|u(n(trace|escape_bytea)|pdate)|e(scape_(string|bytea)|nd_copy|xecute)|p(connect|ing|ort|ut_line|arameter_status|repare)|version|f(ield_(size|n(um|ame)|is_null|t(ype(_oid)?|able)|prtlen)|etch_(object|a(ssoc|ll(_columns)?|rray)|r(ow|esult))|ree_result)|query(_params)?|affected_rows|l(o_(seek|c(lose|reate)|tell|import|open|unlink|export|write|read(_all)?)|ast_(notice|oid|error))|get_(notify|pid|result)|result_(s(tatus|eek)|error(_field)?)|meta_data)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.pgsql.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(virtual|apache_(setenv|note|child_terminate|lookup_uri|get_(version|modules)|re(s(et_timeout|ponse_headers)|quest_(s(ome_auth_required|ub_req_(lookup_(uri|file)|method_uri)|e(t_(etag|last_modified)|rver_port)|atisfies)|headers(_(in|out))?|is_initial_req|discard_request_body|update_mtime|err_headers_out|log_error|auth_(name|type)|r(un|emote_host)|meets_conditions)))|getallheaders)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_apache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(str(totime|ftime)|checkdate|time(zone_(name_(from_abbr|get)|identifiers_list|transitions_get|location_get|version_get|o(pen|ffset_get)|abbreviations_list))?|idate|date(_(sun(set|_info|rise)|create|isodate_set|time(zone_(set|get)|_set)|d(efault_timezone_(set|get)|ate_set)|offset_get|parse|format|modify|add|sub|diff|create_from_format|parse_from_format|get_last_errors|timestamp_(set|get)|interval_(create_from_date_string|format)))?|localtime|g(etdate|m(strftime|date|mktime))|mktime)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_date.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_import_simplexml(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_dom.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfbsql_(hostname|s(t(op_db|art_db)|e(t_(characterset|transaction|password|lob_mode)|lect_db))|n(um_(fields|rows)|ext_result)|c(hange_user|o(nnect|mmit)|lo(se|b_size)|reate_(clob|db|blob))|table_name|insert_id|d(ata(_seek|base(_password)?)|rop_db|b_(status|query))|username|err(no|or)|p(connect|assword)|f(ield_(seek|name|t(ype|able)|flags|len)|etch_(object|field|lengths|a(ssoc|rray)|row)|ree_result)|query|warnings|list_(tables|dbs|fields)|a(utocommit|ffected_rows)|get_autostart_info|r(o(ws_fetched|llback)|e(sult|ad_(clob|blob)))|blob_size)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_fbsql.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bftp_(s(sl_connect|ystype|i(te|ze)|et_option)|n(list|b_(continue|put|f(put|get)|get))|c(h(dir|mod)|dup|onnect|lose)|delete|exec|p(ut|asv|wd)|f(put|get)|alloc|login|get(_option)?|r(ename|aw(list)?|mdir)|m(dtm|kdir)|quit)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_ftp.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(virtual|apache_(setenv|note|get(_(version|modules)|env)|response_headers)|getallheaders)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_functions.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bimap_(header(s|info)|s(can|tatus|ort|ubscribe|e(t(_quota|flag_full|acl)|arch)|avebody)|c(heck|l(ose|earflag_full)|reatemailbox)|num_(recent|msg)|t(hread|imeout)|8bit|delete(mailbox)?|open|u(n(subscribe|delete)|id|tf(7_(decode|encode)|8))|e(rrors|xpunge)|ping|qprint|fetch(header|structure|mime|_overview|body|text)|l(sub|ist|ast_error)|a(ppend|lerts)|get(subscribed|_quota(root)?|acl|mailboxes)|r(e(namemailbox|open)|fc822_(parse_(headers|adrlist)|write_address))|m(sgno|ime_header_decode|ail(_(co(py|mpose)|move)|boxmsginfo)?)|b(inary|ody(struct)?|ase64)|gc|header|scanmailbox|create|rename|list(scan|mailbox|subscribed))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_imap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmb(_(split|ereg(i(_replace)?|_(search(_(setpos|init|pos|get(pos|regs)|regs))?|replace|match)|(_replace_callback))?|regex_(set_options|encoding))|(regex_encoding|split|ereg(i|_replace|i_replace|_match|_search(_pos|_regs|_init|_getregs|_getpos|_setpos)?)?))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_mbregex.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsmfi_(set(timeout|flags|reply)|chgheader|delrcpt|add(header|rcpt)|replacebody|getsymval)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_milter.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmsql_(select_db|num_(fields|rows)|c(onnect|lose|reate_db)|d(ata_seek|rop_db|b_query)|error|pconnect|f(ield_(seek|name|t(ype|able)|flags|len)|etch_(object|field|array|row)|ree_result)|query|affected_rows|list_(tables|dbs|fields)|result)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_msql.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmssql_(select_db|n(um_(fields|rows)|ext_result)|c(onnect|lose)|init|data_seek|execute|pconnect|query|f(ield_(seek|name|type|length)|etch_(object|field|a(ssoc|rray)|row|batch)|ree_(statement|result))|g(uid_string|et_last_message)|r(ows_affected|esult)|bind|min_(error_severity|message_severity))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_mssql.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysql(_(s(tat|e(t_charset|lect_db))|num_(fields|rows)|c(onnect|l(ient_encoding|ose)|reate_db)|thread_id|in(sert_id|fo)|d(ata_seek|rop_db|b_query)|unbuffered_query|e(scape_string|rr(no|or))|p(connect|ing)|f(ield_(seek|name|t(ype|able)|flags|len)|etch_(object|field|lengths|a(ssoc|rray)|row)|ree_result)|query|affected_rows|list_(tables|dbs|processes|fields)|re(sult|al_escape_string)|get_(server_info|host_info|client_info|proto_info)|field(name|len|type|flags|table)|selectdb|freeresult|numfields|numrows|listdbs|listtables|listfields|db_name|dbname|tablename|table_name))?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_mysql.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(solid_fetch_prev|odbc_(s(tatistics|pecialcolumns|etoption)|n(um_(fields|rows)|ext_result)|c(o(nnect|lumn(s|privileges)|mmit)|ursor|lose(_all)?)|table(s|privileges)|data_source|e(rror(msg)?|xec(ute)?)|p(connect|r(imarykeys|ocedure(s|columns)|epare))|f(ield_(scale|n(um|ame)|type|len)|oreignkeys|etch_(into|object|array|row)|ree_result)|autocommit|longreadlen|gettypeinfo|r(ollback|esult(_all)?)|binmode))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_odbc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpreg_(split|quote|last_error|grep|filter|replace(_callback)?|match(_all)?)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_pcre.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(spl_(classes|object_hash|autoload(_(call|unregister|extensions|functions|register))?)|class_(implements|parents|uses))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_spl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsybase_(se(t_message_handler|lect_db)|num_(fields|rows)|c(onnect|lose)|d(eadlock_retry_count|ata_seek)|unbuffered_query|pconnect|f(ield_seek|etch_(object|field|a(ssoc|rray)|row)|ree_result)|query|affected_rows|result|get_last_message|min_(server_severity|client_severity))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_sybase_ct.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsybase_(select_db|num_(fields|rows)|c(onnect|lose)|data_seek|pconnect|f(ield_seek|etch_(object|field|array|row)|ree_result)|query|affected_rows|result|get_last_message|min_(error_severity|message_severity))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_sybase_db.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxmlwriter_(s(tart_(c(omment|data)|d(td(_(e(ntity|lement)|attlist))?|ocument)|pi|element(_ns)?|attribute(_ns)?)|et_indent(_string)?)|text|o(utput_memory|pen_(uri|memory))|end_(c(omment|data)|d(td(_(e(ntity|lement)|attlist))?|ocument)|pi|element|attribute)|f(ull_end_element|lush)|write_(c(omment|data)|dtd(_(e(ntity|lement)|attlist))?|pi|element(_ns)?|attribute(_ns)?|raw))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_xmlwriter.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(tat(Name|Index)|et(Comment(Name|Index)|ArchiveComment))|c(lose|reateEmptyDir)|delete(Name|Index)|open|zip_(close|open|entry_(name|c(ompress(ionmethod|edsize)|lose)|open|filesize|read)|read)|unchange(Name|Index|All)|locateName|addF(ile|romString)|rename(Name|Index)|get(Stream|Comment(Name|Index)|NameIndex|From(Name|Index)|ArchiveComment))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.php_zip.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bposix_(s(trerror|et(sid|uid|pgid|e(uid|gid)|gid))|ctermid|i(satty|nitgroups)|t(tyname|imes)|uname|kill|access|get(sid|cwd|_last_error|uid|e(uid|gid)|p(id|pid|w(nam|uid)|g(id|rp))|login|rlimit|g(id|r(nam|oups|gid)))|mk(nod|fifo)|errno)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.posix.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bproc_(close|terminate|open|get_status)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.proc_open.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpspell_(s(tore_replacement|uggest|ave_wordlist)|c(heck|onfig_(save_repl|create|ignore|d(ict_dir|ata_dir)|personal|r(untogether|epl)|mode)|lear_session)|new(_(config|personal))?|add_to_(session|personal))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.pspell.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bquoted_printable_(decode|encode)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.quot_print.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(srand|getrandmax|rand|mt_(srand|getrandmax|rand))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.rand.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\breadline(_(c(ompletion_function|allback_(handler_(install|remove)|read_char)|lear_history)|info|on_new_line|write_history|list_history|add_history|re(display|ad_history)))?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.readline.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\brecode_(string|file)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.recode.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(plit(i)?|ql_regcase)|ereg(i(_replace)?|_replace)?)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.reg.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsession_(s(tart|et_(save_handler|cookie_params)|ave_path)|cache_(expire|limiter)|name|i(s_registered|d)|de(stroy|code)|un(set|register)|encode|write_close|reg(ister|enerate_id)|get_cookie_params|module_name|status|register_shutdown|commit)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.session.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsha1(_file)?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.sha1.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bshmop_(size|close|delete|open|write|read)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.shmop.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsimplexml_(import_dom|load_(string|file))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.simplexml.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bconfirm_extname_compiled(?=\s*\()</string>
					<key>name</key>
					<string>support.function.skeleton.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(snmp(set|2_(set|walk|real_walk|get(next)?)|3_(set|walk|real_walk|get(next)?)|_(set_(oid_output_format|enum_print|valueretrieval|quick_print)|read_mib|get_(valueretrieval|quick_print))|walk|realwalk|get(next)?)|php_snmpv3)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.snmp.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(socket_((s(hutdown|trerror|e(nd(to)?|t_(nonblock|option|block|blocking|timeout)|lect))|c(onnect|l(ose|ear_error)|reate(_(pair|listen))?)|write|l(isten|ast_error)|accept|get(sockname|_option|peername)|re(cv(from)?|ad)|bind|import_stream|getopt|setopt)|(get_(status)))|set_socket_blocking|set_file_buffer)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.sockets.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsoundex(?=\s*\()</string>
					<key>name</key>
					<string>support.function.soundex.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\biterator_(count|to_array|apply)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.spl_iterators.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsqlite_(has_prev|s(ingle_query|eek)|n(um_(fields|rows)|ext)|c(hanges|olumn|urrent|lose|reate_(function|aggregate))|open|u(nbuffered_query|df_(decode_binary|encode_binary))|e(scape_string|rror_string|xec)|p(open|rev)|key|valid|query|f(ield_name|etch_(string|single|column_types|object|a(ll|rray))|actory)|l(ib(encoding|version)|ast_(insert_rowid|error))|array_query|rewind|busy_timeout|has_more)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.sqlite.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bstream_(s(ocket_(s(hutdown|e(ndto|rver))|client|enable_crypto|pair|accept|recvfrom|get_name)|e(t_(timeout|write_buffer|blocking|read_buffer|chunk_size)|lect))|co(ntext_(set_(option|params|default)|create|get_(default|options|params))|py_to_stream)|filter_(prepend|append|remove)|get_(contents|transports|line|wrappers|meta_data)|supports_lock|resolve_include_path|is_local|register_wrapper)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.streamsfuncs.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(hebrev(c)?|s(scanf|imilar_text|tr(s(tr|pn)|natc(asecmp|mp)|c(hr|spn|oll)|i(str|p(slashes|cslashes|os|_tags))|t(o(upper|k|lower)|r)|_(s(huffle|plit)|ireplace|getcsv|pad|word_count|r(ot13|ep(eat|lace)))|p(os|brk)|r(chr|ipos|ev|pos))|ubstr(_(co(unt|mpare)|replace))?|etlocale)|c(h(unk_split|r)|ount_chars)|nl(2br|_langinfo)|implode|trim|ord|dirname|uc(first|words)|lcfirst|join|pa(thinfo|rse_str)|explode|quotemeta|add(slashes|cslashes)|wordwrap|l(trim|ocaleconv)|rtrim|money_format|b(in2hex|asename)|hex2bin|chop)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.string.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_string_extend_find_offset(16|32)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.string_extend.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(syslog|closelog|openlog|define_syslog_variables)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.syslog.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmsg_(s(tat_queue|e(nd|t_queue))|re(ceive|move_queue)|get_queue)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.sysvmsg.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsem_(acquire|re(lease|move)|get)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.sysvsem.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bshm_(detach|put_var|attach|get_var|remove(_var)?)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.sysvshm.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_text_(split_text|is_whitespace_in_element_content|replace_whole_text)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.text.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\btidy_(c(onfig_count|lean_repair)|is_x(html|ml)|diagnose|error_count|parse_(string|file)|access_count|warning_count|repair_(string|file)|get(opt|_(h(tml(_ver)?|ead)|status|config|o(utput|pt_doc)|error_buffer|r(oot|elease)|body)))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.tidy.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\btoken_(name|get_all)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.tokenizer.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(trval|ettype)|i(s_(s(calar|tring)|callable|nu(ll|meric)|object|float|array|long|resource|bool|double|real)|ntval)|floatval|doubleval|gettype)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.type.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\buniqid(?=\s*\()</string>
					<key>name</key>
					<string>support.function.uniqid.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(url(decode|encode)|parse_url|get_headers|rawurl(decode|encode)|header_(register_callback|remove))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.url.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bstream_(filter_register|get_filters|bucket_(new|prepend|append|make_writeable))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.user_filters.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_userdatahandler_handle(?=\s*\()</string>
					<key>name</key>
					<string>support.function.userdatahandler.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bstream_wrapper_(unregister|re(store|gister))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.userspace.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bconvert_uu(decode|encode)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.uuencode.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(serialize|debug_zval_dump|unserialize|var_(dump|export)|memory_get_(usage|peak_usage))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.var.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bversion_compare(?=\s*\()</string>
					<key>name</key>
					<string>support.function.versioning.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(wddx_(serialize_va(lue|rs)|deserialize|packet_(start|end)|add_vars)|use_soap_error_handler|is_soap_fault)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.wddx.php</string>
				</dict>

				<dict>
					<key>match</key>
					<string>(?i)\b(utf8_(decode|encode)|xml_(set_(start_namespace_decl_handler|notation_decl_handler|character_data_handler|default_handler|object|unparsed_entity_decl_handler|processing_instruction_handler|e(nd_namespace_decl_handler|lement_handler|xternal_entity_ref_handler))|error_string|parse(_into_struct|r_(set_option|create(_ns)?|free|get_option))?|get_(current_(column_number|line_number|byte_index)|error_code)))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.xml.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxmlrpc_(se(t_type|rver_(c(all_method|reate)|destroy|add_introspection_data|register_(introspection_callback|method)))|is_fault|decode(_request)?|parse_method_descriptions|encode(_request)?|get_type)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.xmlrpc-epi-php.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_xpath_(evaluate|query|register_ns)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.xpath.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxsl_xsltprocessor_(has_exslt_support|set_parameter|transform_to_(doc|uri|xml)|import_stylesheet|re(gister_php_functions|move_parameter)|get_parameter)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.xsltprocessor.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(ob_gzhandler|zlib_(get_coding_type|encode|decode)|readgzfile|gz(compress|inflate|deflate|open|uncompress|encode|file|rewind|close|eof|getc|gets|getss|read|passthru|seek|tell|write|puts|decode))(?=\s*\()</string>
					<key>name</key>
					<string>support.function.zlib.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bis_int(eger)?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.alias.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(Re(cursive(RegexIterator|CachingIterator|IteratorIterator|DirectoryIterator|FilterIterator|ArrayIterator)|flection(Method|Class|Object|Extension|P(arameter|roperty)|Function)?|gexIterator)|s(tdClass|wf(s(hape|ound|prite)|text(field)?|displayitem|f(ill|ont(cha(r)?)?)|action|gradient|mo(vie|rph)|b(itmap|utton)))|XMLReader|tidyNode|S(impleXML(Iterator|Element)|oap(Server|Header|Client|Param|Var|Fault)|pl(TempFileObject|ObjectStorage|File(Info|Object)))|NoRewindIterator|C(OMPersistHelper|achingIterator)|I(nfiniteIterator|teratorIterator)|D(irectoryIterator|OM(XPath|Node|C(omment|dataSection)|Text|Document(Fragment)?|ProcessingInstruction|E(ntityReference|lement)|Attr))|P(DO(Statement)?|arentIterator)|E(rrorException|mptyIterator|xception)|FilterIterator|LimitIterator|A(p(pendIterator|acheRequest)|rray(Iterator|Object)))(?=\s*\()</string>
					<key>name</key>
					<string>support.class.builtin.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b((print|echo)\b|(isset|unset|e(val|mpty)|list)(?=\s*\())</string>
					<key>name</key>
					<string>support.function.construct.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\beaccelerator_(caching|clear|clean|info|purge|cached_scripts|removed_scripts|check_mtime|optimizer)?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.eaccelerator.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bioncube_(file_(is_encoded|info|properties|not_permissioned)|(check_)?license_(properties|matches_server|has_expired)|licensed_servers|server_data|read_file|write_file|loader_(version|iversion))?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.ioncube.php</string>
				</dict>

				<dict>
					<key>match</key>
					<string>(?i)\bzend_(loader_(enabled|file_encoded|file_licensed|current_file|install_license|version)|match_hostmasks|obfuscate_function_name|current_obfuscation_level|runtime_obfuscate|obfuscate_class_name|get_id)?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.zend.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(suhosin_(encrypt_cookie|get_raw_cookies)|sg_(load|get_mac_addresses|get_const|load_file|encode_file|eval|encode_string|decode_string)|phpshield_(load|load_file))?(?=\s*\()</string>
					<key>name</key>
					<string>support.function.other.php</string>
				</dict>

			</array>
		</dict>
		<key>var_basic</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
			            (\$+)[a-zA-Z_\x{7f}-\x{ff}]
			            [a-zA-Z0-9_\x{7f}-\x{ff}]*?\b</string>
			<key>name</key>
			<string>variable.other.php</string>
		</dict>
		<key>var_global</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\$)(_(COOKIE|FILES|GET|POST|REQUEST))\b</string>
			<key>name</key>
			<string>variable.other.global.php</string>
		</dict>
		<key>var_global_safer</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>((\$)(GLOBALS|_(ENV|SERVER|SESSION)))|\b(global)\b</string>
			<key>name</key>
			<string>variable.other.global.safer.php</string>
		</dict>
		<key>variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#var_global</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#var_global_safer</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#var_basic</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.php</string>
	<key>uuid</key>
	<string>22986475-8CA5-11D9-AEDD-000D93C8BE28</string>
</dict>
</plist>
